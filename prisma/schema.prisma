generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  image     String?   // Foto profil opsional
  recipes   Recipe[]
  reviews   Review[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Recipe {
  id          String        @id @default(cuid())
  title       String
  description String
  image       String?
  author      User          @relation(fields: [authorId], references: [id])
  authorId    String
  ingredients Ingredient[]
  steps       Step[]
  reviews     Review[]
  tags        RecipeTag[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Ingredient {
  id        String   @id @default(cuid())
  name      String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String
}

model Step {
  id        String   @id @default(cuid())
  order     Int
  content   String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String
}

model Review {
  id        String   @id @default(cuid())
  content   String
  rating    Int      // 1â€“5
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String
  createdAt DateTime @default(now())
}

model Tag {
  id      String       @id @default(cuid())
  name    String       @unique
  recipes RecipeTag[]
}

model RecipeTag {
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String
  tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    String

  @@id([recipeId, tagId])
}
